[
  {
    "name": "BogoSort",
    "theory": "theory.bogo.json",
    "complexity": "O((N+1)!)",
    "recommended_length": {
      "min": 0,
      "max": 10,
      "out_of_range": false
    }
  },
  {
    "name": "BubbleSort",
    "theory": "theory.bubble.json",
    "complexity": "O(N^2)",
    "recommended_length": {
      "min": 0,
      "max": 100000,
      "out_of_range": false
    }
  },
  {
    "name": "CountingSort",
    "theory": "theory.counting.json",
    "complexity": "O(N)",
    "recommended_length": {
      "min": 0,
      "max": 1000000,
      "out_of_range": true
    }
  },
  {
    "name": "HeapSort",
    "theory": "theory.heap.json",
    "complexity": "O(N log(N))",
    "recommended_length": {
      "min": 0,
      "max": 1000000,
      "out_of_range": true
    }
  },
  {
    "name": "InsertionSort",
    "theory": "theory.insertion.json",
    "complexity": "O(N^2)",
    "recommended_length": {
      "min": 0,
      "max": 100000,
      "out_of_range": false
    }
  },
  {
    "name": "MergeSort",
    "theory": "theory.merge.json",
    "complexity": "O(N log(N))",
    "recommended_length": {
      "min": 0,
      "max": 1000000,
      "out_of_range": true
    }
  },
  {
    "name": "QuickSort",
    "theory": "theory.quick.json",
    "complexity": "O(N^2)",
    "recommended_length": {
      "min": 0,
      "max": 100000,
      "out_of_range": true
    }
  },
  {
    "name": "RadixSort",
    "theory": "theory.radix.json",
    "complexity": "O((N+B) * logB(k))",
    "recommended_length": {
      "min": 0,
      "max": 10000000,
      "out_of_range": true
    }
  },
  {
    "name": "SelectionSort",
    "theory": "theory.selection.json",
    "complexity": "O(N^2)",
    "recommended_length": {
      "min": 0,
      "max": 100000,
      "out_of_range": false
    }
  },
  {
    "name": "ShakerSort",
    "theory": "theory.shaker.json",
    "complexity": "O(N^2)",
    "recommended_length": {
      "min": 0,
      "max": 100000,
      "out_of_range": false
    }
  }
]